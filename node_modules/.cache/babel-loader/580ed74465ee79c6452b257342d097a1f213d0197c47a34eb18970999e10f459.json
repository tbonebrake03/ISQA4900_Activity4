{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport db from '../firebaseDb';\nimport Navbar from './Navbar.vue';\nexport default {\n  name: \"List-vue\",\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      Subscriptions: []\n    };\n  },\n  created() {\n    db.collection('subscriptions').onSnapshot(snapshotChange => {\n      this.Subscriptions = [];\n      snapshotChange.forEach(doc => {\n        if (doc.data().name) {\n          this.Subscriptions.push({\n            key: doc.id,\n            name: doc.data().name,\n            description: doc.data().description,\n            amount: doc.data().amount,\n            frequency: doc.data().frequency,\n            start: doc.data().start\n          });\n        }\n      });\n    });\n  },\n  methods: {\n    deleteSubscription(id) {\n      if (window.confirm('Do you really want to delete?')) {\n        db.collection('subscriptions').doc(id).delete().then(() => {}).catch(error => {\n          console.error(error);\n        });\n      }\n    },\n    createSubscription() {\n      this.$router.push('/create');\n    }\n  }\n};","map":{"version":3,"names":["db","Navbar","name","components","data","Subscriptions","created","collection","onSnapshot","snapshotChange","forEach","doc","push","key","id","description","amount","frequency","start","methods","deleteSubscription","window","confirm","delete","then","catch","error","console","createSubscription","$router"],"sources":["/Users/tbonebrake/Desktop/FullStackDevelopment/subscriptions/subscriptions/src/components/SubscriptionsList.vue"],"sourcesContent":["<template>\n    <div class=\"app\">\n    <Navbar />\n    <div class=\"List\">\n    <div class=\"row justify-content-center\">\n    <div class=\"col-md-8\">\n    <h3 class=\"text-center\">Subscriptions List</h3>\n    <table class=\"table align-middle\">\n    <thead>\n    <tr>\n    <th>Subscription</th>\n    <th class=\"d-none d-sm-table-cell\">Description</th>\n    <th>Amount</th>\n    <th>Frequency</th>\n    <th>Year Started</th>\n    <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr v-for=\"subscription in Subscriptions\" :key=\"subscription.key\">\n    <td>{{ subscription.name }}</td>\n    <td class=\"d-none d-sm-table-cell\">{{ subscription.description }}</td>\n    <td>${{ subscription.amount }}</td>\n    <td>{{ subscription.frequency }}</td>\n    <td>{{ subscription.start }}</td>\n    <td>\n    <router-link :to=\"{ name: 'edit', params: { id: subscription.key } }\" class=\"btn btn-primary btn-sm px-3\">\n    Edit\n    </router-link>\n    <button @click.prevent=\"deleteSubscription(subscription.key)\" class=\"btn btn-danger btn-sm px-3\">\n    Delete\n    </button>\n    </td>\n    </tr>\n    </tbody>\n    </table>\n    <button @click=\"createSubscription\">Add New Subscription</button>\n    \n    </div>\n    </div>\n    </div>\n    </div>\n    </template>\n    \n    <script>\n    import db from '../firebaseDb'\n    import Navbar from './Navbar.vue'\n    \n    export default {\n    name: \"List-vue\",\n    components: {\n    Navbar\n    },\n    data() {\n    return {\n    Subscriptions: [],\n    }\n    },\n    created() {\n    db.collection('subscriptions').onSnapshot((snapshotChange) => {\n    this.Subscriptions = []\n    snapshotChange.forEach((doc) => {\n    if (doc.data().name) {\n    this.Subscriptions.push({\n    key: doc.id,\n    name: doc.data().name,\n    description: doc.data().description,\n    amount: doc.data().amount,\n    frequency: doc.data().frequency,\n    start: doc.data().start\n    })\n    }\n    })\n    })\n    },\n    methods: {\n    deleteSubscription(id) {\n    if (window.confirm('Do you really want to delete?')) {\n    db.collection('subscriptions').doc(id).delete().then(() => {\n    })\n    .catch((error) => {\n    console.error(error)\n    })\n    }\n    },\n    createSubscription() {\n    this.$router.push('/create')\n    }\n    }\n    }\n    </script>\n    \n    <style lang=\"scss\">\n    .table thead {\n    background-color: #42B883;\n    color: #2C3D4E;\n    }\n    \n    .table td,\n    .table th {\n    padding: 12px 15px;\n    border-bottom: 1px solid #ddd;\n    text-align: center;\n    }\n    \n    .btn {\n    padding-top: 2px;\n    padding-bottom: 2px;\n      padding-right: 5px;\n      padding-left: 5px;\n      margin: 2px;\n    }\n    </style>\n    "],"mappings":";AA6CI,OAAOA,EAAC,MAAO,eAAc;AAC7B,OAAOC,MAAK,MAAO,cAAa;AAEhC,eAAe;EACfC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACZF;EACA,CAAC;EACDG,IAAIA,CAAA,EAAG;IACP,OAAO;MACPC,aAAa,EAAE;IACf;EACA,CAAC;EACDC,OAAOA,CAAA,EAAG;IACVN,EAAE,CAACO,UAAU,CAAC,eAAe,CAAC,CAACC,UAAU,CAAEC,cAAc,IAAK;MAC9D,IAAI,CAACJ,aAAY,GAAI,EAAC;MACtBI,cAAc,CAACC,OAAO,CAAEC,GAAG,IAAK;QAChC,IAAIA,GAAG,CAACP,IAAI,CAAC,CAAC,CAACF,IAAI,EAAE;UACrB,IAAI,CAACG,aAAa,CAACO,IAAI,CAAC;YACxBC,GAAG,EAAEF,GAAG,CAACG,EAAE;YACXZ,IAAI,EAAES,GAAG,CAACP,IAAI,CAAC,CAAC,CAACF,IAAI;YACrBa,WAAW,EAAEJ,GAAG,CAACP,IAAI,CAAC,CAAC,CAACW,WAAW;YACnCC,MAAM,EAAEL,GAAG,CAACP,IAAI,CAAC,CAAC,CAACY,MAAM;YACzBC,SAAS,EAAEN,GAAG,CAACP,IAAI,CAAC,CAAC,CAACa,SAAS;YAC/BC,KAAK,EAAEP,GAAG,CAACP,IAAI,CAAC,CAAC,CAACc;UAClB,CAAC;QACD;MACA,CAAC;IACD,CAAC;EACD,CAAC;EACDC,OAAO,EAAE;IACTC,kBAAkBA,CAACN,EAAE,EAAE;MACvB,IAAIO,MAAM,CAACC,OAAO,CAAC,+BAA+B,CAAC,EAAE;QACrDtB,EAAE,CAACO,UAAU,CAAC,eAAe,CAAC,CAACI,GAAG,CAACG,EAAE,CAAC,CAACS,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM,CAC3D,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;UAClBC,OAAO,CAACD,KAAK,CAACA,KAAK;QACnB,CAAC;MACD;IACA,CAAC;IACDE,kBAAkBA,CAAA,EAAG;MACrB,IAAI,CAACC,OAAO,CAACjB,IAAI,CAAC,SAAS;IAC3B;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}